SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS KAISA_BLOG_REPLY;
DROP TABLE IF EXISTS KAISA_BLOG;
DROP TABLE IF EXISTS KAISA_BLOG_CATEGORY;
DROP TABLE IF EXISTS KAISA_CODE;
DROP TABLE IF EXISTS KAISA_CODE_GROUP;
DROP TABLE IF EXISTS KAISA_DICTIONARY;




/* Create Tables */

CREATE TABLE KAISA_BLOG
(
	BLOG_NUMBER int NOT NULL AUTO_INCREMENT,
	BLOG_TITLE varchar(255) NOT NULL,
	CATEGORY_NUMBER smallint NOT NULL,
	CONTENT blob NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (BLOG_NUMBER)
);


CREATE TABLE KAISA_BLOG_CATEGORY
(
	CATEGORY_NUMBER int NOT NULL AUTO_INCREMENT,
	HIGH_NUMBER int DEFAULT 0 NOT NULL,
	LEAF_YN char(1) NOT NULL,
	CATEGORY_NAME varchar(100) NOT NULL,
	PRIORITY tinyint NOT NULL,
	DEPTH tinyint NOT NULL,
	USE_YN char(1) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (CATEGORY_NUMBER),
	UNIQUE (CATEGORY_NUMBER)
);


CREATE TABLE KAISA_BLOG_REPLY
(
	BLOG_REPLY_NUMBER int NOT NULL AUTO_INCREMENT,
	BLOG_NUMBER int NOT NULL,
	MEMBER_NAME varchar(50) NOT NULL,
	CONTENT varchar(255) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (BLOG_REPLY_NUMBER, BLOG_NUMBER),
	UNIQUE (BLOG_REPLY_NUMBER)
);


CREATE TABLE KAISA_CODE
(
	CODE_NUMBER tinyint NOT NULL,
	CODE_GROUP_NAME varchar(100) NOT NULL,
	CODE_NAME varchar(150) NOT NULL,
	PRIORITY tinyint NOT NULL,
	USE_YN char(1) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (CODE_NUMBER, CODE_GROUP_NAME)
);


CREATE TABLE KAISA_CODE_GROUP
(
	CODE_GROUP_NAME varchar(100) NOT NULL,
	DESCRIPTION varchar(255) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (CODE_GROUP_NAME),
	UNIQUE (CODE_GROUP_NAME)
);


CREATE TABLE KAISA_DICTIONARY
(
	DICTIONARY_NUMBER int NOT NULL AUTO_INCREMENT,
	ABB varchar(50) NOT NULL,
	EN varchar(100) NOT NULL,
	KO varchar(100) NOT NULL,
	DESCRIPTION varchar(255) NOT NULL,
	CREATE_DATE datetime NOT NULL,
	UPDATE_DATE datetime NOT NULL,
	PRIMARY KEY (DICTIONARY_NUMBER, ABB),
	UNIQUE (DICTIONARY_NUMBER),
	UNIQUE (ABB)
);



/* Create Foreign Keys */

ALTER TABLE KAISA_BLOG_REPLY
	ADD FOREIGN KEY (BLOG_NUMBER)
	REFERENCES KAISA_BLOG (BLOG_NUMBER)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE KAISA_CODE
	ADD FOREIGN KEY (CODE_GROUP_NAME)
	REFERENCES KAISA_CODE_GROUP (CODE_GROUP_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



